<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_51) on Fri Jul 04 20:13:48 IST 2014 -->
<title>AssertionService (QMetry Automation Framework - 2.1.3)</title>
<meta name="date" content="2014-07-04">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="AssertionService (QMetry Automation Framework - 2.1.3)";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/AssertionService.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../../../com/infostretch/automation/ui/selenium/AutoWaitInjector.html" title="class in com.infostretch.automation.ui.selenium"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/infostretch/automation/ui/selenium/AssertionService.html" target="_top">Frames</a></li>
<li><a href="AssertionService.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.infostretch.automation.ui.selenium</div>
<h2 title="Class AssertionService" class="title">Class AssertionService</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.infostretch.automation.ui.selenium.AssertionService</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">AssertionService</span>
extends java.lang.Object</pre>
<div class="block">This class provides assertion and verification methods and keeps track of
 each test-case. To change message format for Assertion/verification update
 appropriate prop value in assertMessage.properties</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>chirag</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected java.util.List&lt;<a href="../../../../../com/infostretch/automation/core/CheckpointResultBean.html" title="class in com.infostretch.automation.core">CheckpointResultBean</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#checkPointResults">checkPointResults</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected org.apache.commons.logging.Log</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#logger">logger</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected java.lang.reflect.Method</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#method">method</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected java.lang.StringBuffer</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verificationErrors">verificationErrors</a></strong></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#AssertionService()">AssertionService</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#addAssertionLog(java.lang.String, com.infostretch.automation.core.MessageTypes)">addAssertionLog</a></strong>(java.lang.String&nbsp;msg,
               <a href="../../../../../com/infostretch/automation/core/MessageTypes.html" title="enum in com.infostretch.automation.core">MessageTypes</a>&nbsp;type)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#addAssertionLogWithScreenShot(java.lang.String, com.infostretch.automation.core.MessageTypes)">addAssertionLogWithScreenShot</a></strong>(java.lang.String&nbsp;msg,
                             <a href="../../../../../com/infostretch/automation/core/MessageTypes.html" title="enum in com.infostretch.automation.core">MessageTypes</a>&nbsp;type)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#addVerificationError(java.lang.Throwable)">addVerificationError</a></strong>(java.lang.Throwable&nbsp;e)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertElementNotPresent(java.lang.String, java.lang.String)">assertElementNotPresent</a></strong>(java.lang.String&nbsp;elementLocator,
                       java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertElementPresent(java.lang.String, java.lang.String)">assertElementPresent</a></strong>(java.lang.String&nbsp;elementLocator,
                    java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertEquals(java.lang.Object, java.lang.Object)">assertEquals</a></strong>(java.lang.Object&nbsp;s1,
            java.lang.Object&nbsp;s2)</code>
<div class="block">Like JUnit's Assert.assertEquals, but knows how to compare string arrays</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertEquals(java.lang.Object, java.lang.Object, java.lang.String)">assertEquals</a></strong>(java.lang.Object&nbsp;actual,
            java.lang.Object&nbsp;expected,
            java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertEquals(java.lang.String[], java.lang.String[])">assertEquals</a></strong>(java.lang.String[]&nbsp;s1,
            java.lang.String[]&nbsp;s2)</code>
<div class="block">Asserts that two string arrays have identical string contents</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertFalse(boolean, java.lang.String)">assertFalse</a></strong>(boolean&nbsp;b,
           java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertFalse(boolean, java.lang.String, java.lang.String)">assertFalse</a></strong>(boolean&nbsp;b,
           java.lang.String&nbsp;failMsg,
           java.lang.String&nbsp;successMsg)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertImageLoaded(java.lang.String, java.lang.String)">assertImageLoaded</a></strong>(java.lang.String&nbsp;imgLoc,
                 java.lang.String&nbsp;msg)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsEditable(java.lang.String, java.lang.String)">assertIsEditable</a></strong>(java.lang.String&nbsp;elementLocator,
                java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsFiledVlaue(java.lang.String, java.lang.String, java.lang.String)">assertIsFiledVlaue</a></strong>(java.lang.String&nbsp;text,
                  java.lang.String&nbsp;locator,
                  java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsNotEditable(java.lang.String, java.lang.String)">assertIsNotEditable</a></strong>(java.lang.String&nbsp;elementLocator,
                   java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsNotVisible(java.lang.String, java.lang.String)">assertIsNotVisible</a></strong>(java.lang.String&nbsp;elementLocator,
                  java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsSelectedLabel(java.lang.String, java.lang.String, java.lang.String)">assertIsSelectedLabel</a></strong>(java.lang.String&nbsp;label,
                     java.lang.String&nbsp;locator,
                     java.lang.String&nbsp;name)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsTextPresent(java.lang.String)">assertIsTextPresent</a></strong>(java.lang.String&nbsp;text)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsTextPresent(java.lang.String, java.lang.String)">assertIsTextPresent</a></strong>(java.lang.String&nbsp;text,
                   java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsTextPresent(java.lang.String, java.lang.String, java.lang.String)">assertIsTextPresent</a></strong>(java.lang.String&nbsp;text,
                   java.lang.String&nbsp;locator,
                   java.lang.String&nbsp;message)</code>
<div class="block">to provide register expression use regexp:<exp> eg: "regexp:*test*"</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertIsVisible(java.lang.String, java.lang.String)">assertIsVisible</a></strong>(java.lang.String&nbsp;elementLocator,
               java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertNotEquals(java.lang.Object, java.lang.Object, java.lang.String)">assertNotEquals</a></strong>(java.lang.Object&nbsp;actual,
               java.lang.Object&nbsp;expected,
               java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertNotTextPresent(java.lang.String, java.lang.String, java.lang.String)">assertNotTextPresent</a></strong>(java.lang.String&nbsp;text,
                    java.lang.String&nbsp;locator,
                    java.lang.String&nbsp;message)</code>
<div class="block">to provide register expression use regexp:<exp> eg: "regexp:*test*"</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertTrue(boolean, java.lang.String)">assertTrue</a></strong>(boolean&nbsp;b,
          java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#assertTrue(boolean, java.lang.String, java.lang.String)">assertTrue</a></strong>(boolean&nbsp;b,
          java.lang.String&nbsp;failMsg,
          java.lang.String&nbsp;successMsg)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#checkForVerificationErrors()">checkForVerificationErrors</a></strong>()</code>
<div class="block">Asserts that there were no verification errors during the current test,
 failing immediately if any are found</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#claerAssertionsLog()">claerAssertionsLog</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#clearVerificationErrors()">clearVerificationErrors</a></strong>()</code>
<div class="block">Clears out the list of verification errors</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#clearVerificationFailed()">clearVerificationFailed</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#fail(java.lang.String)">fail</a></strong>(java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getAssertionsLog()">getAssertionsLog</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.List&lt;<a href="../../../../../com/infostretch/automation/core/CheckpointResultBean.html" title="class in com.infostretch.automation.core">CheckpointResultBean</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getCheckPointResults()">getCheckPointResults</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getLastCapturedScreenShot()">getLastCapturedScreenShot</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getLastCapturedScreenShotFile()">getLastCapturedScreenShotFile</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getReportDir()">getReportDir</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getReqResXml()">getReqResXml</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getScreenShotDir()">getScreenShotDir</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getTestCaseName()">getTestCaseName</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#getVerificationErrors()">getVerificationErrors</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#isAlwaysCaptureScreenShot()">isAlwaysCaptureScreenShot</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#isCaptureScreenShotOnFailure()">isCaptureScreenShotOnFailure</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#isVerificationFailed()">isVerificationFailed</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#join(java.lang.String[], char)">join</a></strong>(java.lang.String[]&nbsp;sa,
    char&nbsp;c)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#seleniumEquals(java.lang.Object, java.lang.Object)">seleniumEquals</a></strong>(java.lang.Object&nbsp;expected,
              java.lang.Object&nbsp;actual)</code>
<div class="block">Compares two objects, but handles "regexp:" strings like HTML Selenese</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#seleniumEquals(java.lang.String, java.lang.String)">seleniumEquals</a></strong>(java.lang.String&nbsp;expectedPattern,
              java.lang.String&nbsp;actual)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setAlwaysCaptureScreenShot(boolean)">setAlwaysCaptureScreenShot</a></strong>(boolean&nbsp;alwaysCaptureScreenShot)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setCaptureScreenShotOnFailure(boolean)">setCaptureScreenShotOnFailure</a></strong>(boolean&nbsp;captureScreetShotOnFailure)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setLastCapturedScreenShot(java.lang.String)">setLastCapturedScreenShot</a></strong>(java.lang.String&nbsp;lastCapturedScreenShot)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setMethod(java.lang.reflect.Method)">setMethod</a></strong>(java.lang.reflect.Method&nbsp;method)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setReportDir(java.lang.String)">setReportDir</a></strong>(java.lang.String&nbsp;reportDir)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setScreenShotDir(java.lang.String)">setScreenShotDir</a></strong>(java.lang.String&nbsp;screenShotDir)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setUpAssertionService(com.infostretch.automation.ui.selenium.IsSelenium)">setUpAssertionService</a></strong>(<a href="../../../../../com/infostretch/automation/ui/selenium/IsSelenium.html" title="interface in com.infostretch.automation.ui.selenium">IsSelenium</a>&nbsp;selenium)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setUpAssertionService(com.infostretch.automation.ui.selenium.IsSelenium, com.infostretch.automation.util.PropertyUtil)">setUpAssertionService</a></strong>(<a href="../../../../../com/infostretch/automation/ui/selenium/IsSelenium.html" title="interface in com.infostretch.automation.ui.selenium">IsSelenium</a>&nbsp;selenium,
                     <a href="../../../../../com/infostretch/automation/util/PropertyUtil.html" title="class in com.infostretch.automation.util">PropertyUtil</a>&nbsp;props)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setVerificationFailed()">setVerificationFailed</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#setVerificationFailed(boolean)">setVerificationFailed</a></strong>(boolean&nbsp;isVerificationFailed)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#takeScreenShot()">takeScreenShot</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyElementNotPresent(java.lang.String, java.lang.String)">verifyElementNotPresent</a></strong>(java.lang.String&nbsp;elementLocator,
                       java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyElementPresent(java.lang.String, java.lang.String)">verifyElementPresent</a></strong>(java.lang.String&nbsp;elementLocator,
                    java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyEquals(java.lang.Object, java.lang.Object, java.lang.String)">verifyEquals</a></strong>(java.lang.Object&nbsp;actual,
            java.lang.Object&nbsp;expected,
            java.lang.String&nbsp;message)</code>
<div class="block">Like assertEquals, but fails at the end of the test (during tearDown)</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyEquals(java.lang.String[], java.lang.String[])">verifyEquals</a></strong>(java.lang.String[]&nbsp;s1,
            java.lang.String[]&nbsp;s2)</code>
<div class="block">Asserts that two string arrays have identical string contents (fails at
 the end of the test, during tearDown)</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyFalse(boolean, java.lang.String, java.lang.String)">verifyFalse</a></strong>(boolean&nbsp;b,
           java.lang.String&nbsp;failMessage,
           java.lang.String&nbsp;successMessage)</code>
<div class="block">Like assertFalse, but fails at the end of the test (during tearDown)</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyImageLoaded(java.lang.String, java.lang.String)">verifyImageLoaded</a></strong>(java.lang.String&nbsp;imgLocator,
                 java.lang.String&nbsp;msg)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyIsEditable(java.lang.String, java.lang.String)">verifyIsEditable</a></strong>(java.lang.String&nbsp;elementLocator,
                java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyIsNotEditable(java.lang.String, java.lang.String)">verifyIsNotEditable</a></strong>(java.lang.String&nbsp;elementLocator,
                   java.lang.String&nbsp;elementName)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyIsNotVisible(java.lang.String, java.lang.String)">verifyIsNotVisible</a></strong>(java.lang.String&nbsp;elementLocator,
                  java.lang.String&nbsp;elementName)</code>
<div class="block">Like assertFalse, but fails at the end of the test (during tearDown)</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyIsVisible(java.lang.String, java.lang.String)">verifyIsVisible</a></strong>(java.lang.String&nbsp;elementLocator,
               java.lang.String&nbsp;elementName)</code>
<div class="block">Like assertFalse, but fails at the end of the test (during tearDown)</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifySelectedLabel(java.lang.String, java.lang.String, java.lang.String)">verifySelectedLabel</a></strong>(java.lang.String&nbsp;text,
                   java.lang.String&nbsp;locator,
                   java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyText(java.lang.String, java.lang.String)">verifyText</a></strong>(java.lang.String&nbsp;text,
          java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyText(java.lang.String, java.lang.String, java.lang.String)">verifyText</a></strong>(java.lang.String&nbsp;text,
          java.lang.String&nbsp;locator,
          java.lang.String&nbsp;message)</code>
<div class="block">method verifies text derived from assertIsTextPresent</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyTrue(boolean, java.lang.String, java.lang.String)">verifyTrue</a></strong>(boolean&nbsp;b,
          java.lang.String&nbsp;failMessage,
          java.lang.String&nbsp;successMessage)</code>
<div class="block">Like assertTrue, but fails at the end of the test (during tearDown)</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#verifyValue(java.lang.String, java.lang.String, java.lang.String)">verifyValue</a></strong>(java.lang.String&nbsp;text,
           java.lang.String&nbsp;locator,
           java.lang.String&nbsp;message)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="method">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>method</h4>
<pre>protected&nbsp;java.lang.reflect.Method method</pre>
</li>
</ul>
<a name="verificationErrors">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verificationErrors</h4>
<pre>protected&nbsp;java.lang.StringBuffer verificationErrors</pre>
</li>
</ul>
<a name="logger">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>logger</h4>
<pre>protected final&nbsp;org.apache.commons.logging.Log logger</pre>
</li>
</ul>
<a name="checkPointResults">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>checkPointResults</h4>
<pre>protected&nbsp;java.util.List&lt;<a href="../../../../../com/infostretch/automation/core/CheckpointResultBean.html" title="class in com.infostretch.automation.core">CheckpointResultBean</a>&gt; checkPointResults</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="AssertionService()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>AssertionService</h4>
<pre>public&nbsp;AssertionService()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="setUpAssertionService(com.infostretch.automation.ui.selenium.IsSelenium)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUpAssertionService</h4>
<pre>protected&nbsp;void&nbsp;setUpAssertionService(<a href="../../../../../com/infostretch/automation/ui/selenium/IsSelenium.html" title="interface in com.infostretch.automation.ui.selenium">IsSelenium</a>&nbsp;selenium)</pre>
</li>
</ul>
<a name="setUpAssertionService(com.infostretch.automation.ui.selenium.IsSelenium, com.infostretch.automation.util.PropertyUtil)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUpAssertionService</h4>
<pre>protected&nbsp;void&nbsp;setUpAssertionService(<a href="../../../../../com/infostretch/automation/ui/selenium/IsSelenium.html" title="interface in com.infostretch.automation.ui.selenium">IsSelenium</a>&nbsp;selenium,
                         <a href="../../../../../com/infostretch/automation/util/PropertyUtil.html" title="class in com.infostretch.automation.util">PropertyUtil</a>&nbsp;props)</pre>
</li>
</ul>
<a name="setMethod(java.lang.reflect.Method)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMethod</h4>
<pre>public&nbsp;void&nbsp;setMethod(java.lang.reflect.Method&nbsp;method)</pre>
</li>
</ul>
<a name="getReportDir()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReportDir</h4>
<pre>protected&nbsp;java.lang.String&nbsp;getReportDir()</pre>
</li>
</ul>
<a name="setReportDir(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setReportDir</h4>
<pre>protected&nbsp;void&nbsp;setReportDir(java.lang.String&nbsp;reportDir)</pre>
</li>
</ul>
<a name="getLastCapturedScreenShot()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastCapturedScreenShot</h4>
<pre>public&nbsp;java.lang.String&nbsp;getLastCapturedScreenShot()</pre>
</li>
</ul>
<a name="setLastCapturedScreenShot(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setLastCapturedScreenShot</h4>
<pre>public&nbsp;void&nbsp;setLastCapturedScreenShot(java.lang.String&nbsp;lastCapturedScreenShot)</pre>
</li>
</ul>
<a name="setVerificationFailed(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setVerificationFailed</h4>
<pre>public&nbsp;void&nbsp;setVerificationFailed(boolean&nbsp;isVerificationFailed)</pre>
</li>
</ul>
<a name="setScreenShotDir(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setScreenShotDir</h4>
<pre>protected&nbsp;void&nbsp;setScreenShotDir(java.lang.String&nbsp;screenShotDir)</pre>
</li>
</ul>
<a name="isVerificationFailed()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isVerificationFailed</h4>
<pre>public&nbsp;boolean&nbsp;isVerificationFailed()</pre>
</li>
</ul>
<a name="setVerificationFailed()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setVerificationFailed</h4>
<pre>protected&nbsp;void&nbsp;setVerificationFailed()</pre>
</li>
</ul>
<a name="clearVerificationFailed()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearVerificationFailed</h4>
<pre>protected&nbsp;void&nbsp;clearVerificationFailed()</pre>
</li>
</ul>
<a name="checkForVerificationErrors()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkForVerificationErrors</h4>
<pre>public&nbsp;void&nbsp;checkForVerificationErrors()</pre>
<div class="block">Asserts that there were no verification errors during the current test,
 failing immediately if any are found</div>
</li>
</ul>
<a name="fail(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fail</h4>
<pre>public static&nbsp;void&nbsp;fail(java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="clearVerificationErrors()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearVerificationErrors</h4>
<pre>protected&nbsp;void&nbsp;clearVerificationErrors()</pre>
<div class="block">Clears out the list of verification errors</div>
</li>
</ul>
<a name="getVerificationErrors()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getVerificationErrors</h4>
<pre>public&nbsp;java.lang.String&nbsp;getVerificationErrors()</pre>
</li>
</ul>
<a name="getAssertionsLog()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAssertionsLog</h4>
<pre>public&nbsp;java.lang.String&nbsp;getAssertionsLog()</pre>
</li>
</ul>
<a name="getCheckPointResults()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCheckPointResults</h4>
<pre>public&nbsp;java.util.List&lt;<a href="../../../../../com/infostretch/automation/core/CheckpointResultBean.html" title="class in com.infostretch.automation.core">CheckpointResultBean</a>&gt;&nbsp;getCheckPointResults()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the checkPointResults</dd></dl>
</li>
</ul>
<a name="claerAssertionsLog()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>claerAssertionsLog</h4>
<pre>public&nbsp;void&nbsp;claerAssertionsLog()</pre>
</li>
</ul>
<a name="assertElementPresent(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertElementPresent</h4>
<pre>public&nbsp;void&nbsp;assertElementPresent(java.lang.String&nbsp;elementLocator,
                        java.lang.String&nbsp;name)</pre>
</li>
</ul>
<a name="assertElementNotPresent(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertElementNotPresent</h4>
<pre>public&nbsp;void&nbsp;assertElementNotPresent(java.lang.String&nbsp;elementLocator,
                           java.lang.String&nbsp;name)</pre>
</li>
</ul>
<a name="assertIsVisible(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsVisible</h4>
<pre>public&nbsp;void&nbsp;assertIsVisible(java.lang.String&nbsp;elementLocator,
                   java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="assertIsNotVisible(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsNotVisible</h4>
<pre>public&nbsp;void&nbsp;assertIsNotVisible(java.lang.String&nbsp;elementLocator,
                      java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="assertIsEditable(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsEditable</h4>
<pre>public&nbsp;void&nbsp;assertIsEditable(java.lang.String&nbsp;elementLocator,
                    java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="assertIsNotEditable(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsNotEditable</h4>
<pre>public&nbsp;void&nbsp;assertIsNotEditable(java.lang.String&nbsp;elementLocator,
                       java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="assertTrue(boolean, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertTrue</h4>
<pre>public&nbsp;void&nbsp;assertTrue(boolean&nbsp;b,
              java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="assertImageLoaded(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertImageLoaded</h4>
<pre>public&nbsp;void&nbsp;assertImageLoaded(java.lang.String&nbsp;imgLoc,
                     java.lang.String&nbsp;msg)</pre>
</li>
</ul>
<a name="assertTrue(boolean, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertTrue</h4>
<pre>public&nbsp;void&nbsp;assertTrue(boolean&nbsp;b,
              java.lang.String&nbsp;failMsg,
              java.lang.String&nbsp;successMsg)</pre>
</li>
</ul>
<a name="assertFalse(boolean, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertFalse</h4>
<pre>public&nbsp;void&nbsp;assertFalse(boolean&nbsp;b,
               java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="assertFalse(boolean, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertFalse</h4>
<pre>public&nbsp;void&nbsp;assertFalse(boolean&nbsp;b,
               java.lang.String&nbsp;failMsg,
               java.lang.String&nbsp;successMsg)</pre>
</li>
</ul>
<a name="assertEquals(java.lang.Object, java.lang.Object, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertEquals</h4>
<pre>public&nbsp;void&nbsp;assertEquals(java.lang.Object&nbsp;actual,
                java.lang.Object&nbsp;expected,
                java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="assertNotEquals(java.lang.Object, java.lang.Object, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotEquals</h4>
<pre>public&nbsp;void&nbsp;assertNotEquals(java.lang.Object&nbsp;actual,
                   java.lang.Object&nbsp;expected,
                   java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="assertIsTextPresent(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsTextPresent</h4>
<pre>public&nbsp;void&nbsp;assertIsTextPresent(java.lang.String&nbsp;text,
                       java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="assertIsTextPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsTextPresent</h4>
<pre>public&nbsp;void&nbsp;assertIsTextPresent(java.lang.String&nbsp;text)</pre>
</li>
</ul>
<a name="assertIsTextPresent(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsTextPresent</h4>
<pre>public&nbsp;void&nbsp;assertIsTextPresent(java.lang.String&nbsp;text,
                       java.lang.String&nbsp;locator,
                       java.lang.String&nbsp;message)</pre>
<div class="block">to provide register expression use regexp:<exp> eg: "regexp:*test*"</div>
</li>
</ul>
<a name="assertNotTextPresent(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotTextPresent</h4>
<pre>public&nbsp;void&nbsp;assertNotTextPresent(java.lang.String&nbsp;text,
                        java.lang.String&nbsp;locator,
                        java.lang.String&nbsp;message)</pre>
<div class="block">to provide register expression use regexp:<exp> eg: "regexp:*test*"</div>
</li>
</ul>
<a name="assertIsFiledVlaue(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsFiledVlaue</h4>
<pre>public&nbsp;void&nbsp;assertIsFiledVlaue(java.lang.String&nbsp;text,
                      java.lang.String&nbsp;locator,
                      java.lang.String&nbsp;name)</pre>
</li>
</ul>
<a name="assertIsSelectedLabel(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertIsSelectedLabel</h4>
<pre>public&nbsp;void&nbsp;assertIsSelectedLabel(java.lang.String&nbsp;label,
                         java.lang.String&nbsp;locator,
                         java.lang.String&nbsp;name)</pre>
</li>
</ul>
<a name="getReqResXml()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReqResXml</h4>
<pre>public&nbsp;java.lang.String&nbsp;getReqResXml()</pre>
</li>
</ul>
<a name="verifyTrue(boolean, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyTrue</h4>
<pre>public&nbsp;boolean&nbsp;verifyTrue(boolean&nbsp;b,
                 java.lang.String&nbsp;failMessage,
                 java.lang.String&nbsp;successMessage)</pre>
<div class="block">Like assertTrue, but fails at the end of the test (during tearDown)</div>
</li>
</ul>
<a name="verifyFalse(boolean, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyFalse</h4>
<pre>public&nbsp;boolean&nbsp;verifyFalse(boolean&nbsp;b,
                  java.lang.String&nbsp;failMessage,
                  java.lang.String&nbsp;successMessage)</pre>
<div class="block">Like assertFalse, but fails at the end of the test (during tearDown)</div>
</li>
</ul>
<a name="verifyEquals(java.lang.Object, java.lang.Object, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyEquals</h4>
<pre>public&nbsp;boolean&nbsp;verifyEquals(java.lang.Object&nbsp;actual,
                   java.lang.Object&nbsp;expected,
                   java.lang.String&nbsp;message)</pre>
<div class="block">Like assertEquals, but fails at the end of the test (during tearDown)</div>
</li>
</ul>
<a name="verifyText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyText</h4>
<pre>public&nbsp;boolean&nbsp;verifyText(java.lang.String&nbsp;text,
                 java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="verifyText(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyText</h4>
<pre>public&nbsp;boolean&nbsp;verifyText(java.lang.String&nbsp;text,
                 java.lang.String&nbsp;locator,
                 java.lang.String&nbsp;message)</pre>
<div class="block">method verifies text derived from assertIsTextPresent</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>text</code> - </dd><dd><code>locator</code> - </dd><dd><code>failMessage</code> - </dd><dd><code>successMessage</code> - </dd><dt><span class="strong">See Also:</span></dt><dd><code>assertIsTextPresent</code></dd></dl>
</li>
</ul>
<a name="verifyValue(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyValue</h4>
<pre>public&nbsp;boolean&nbsp;verifyValue(java.lang.String&nbsp;text,
                  java.lang.String&nbsp;locator,
                  java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="verifySelectedLabel(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifySelectedLabel</h4>
<pre>public&nbsp;boolean&nbsp;verifySelectedLabel(java.lang.String&nbsp;text,
                          java.lang.String&nbsp;locator,
                          java.lang.String&nbsp;message)</pre>
</li>
</ul>
<a name="verifyIsVisible(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyIsVisible</h4>
<pre>public&nbsp;boolean&nbsp;verifyIsVisible(java.lang.String&nbsp;elementLocator,
                      java.lang.String&nbsp;elementName)</pre>
<div class="block">Like assertFalse, but fails at the end of the test (during tearDown)</div>
</li>
</ul>
<a name="verifyIsNotVisible(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyIsNotVisible</h4>
<pre>public&nbsp;boolean&nbsp;verifyIsNotVisible(java.lang.String&nbsp;elementLocator,
                         java.lang.String&nbsp;elementName)</pre>
<div class="block">Like assertFalse, but fails at the end of the test (during tearDown)</div>
</li>
</ul>
<a name="verifyIsEditable(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyIsEditable</h4>
<pre>public&nbsp;boolean&nbsp;verifyIsEditable(java.lang.String&nbsp;elementLocator,
                       java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="verifyIsNotEditable(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyIsNotEditable</h4>
<pre>public&nbsp;boolean&nbsp;verifyIsNotEditable(java.lang.String&nbsp;elementLocator,
                          java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="verifyElementPresent(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyElementPresent</h4>
<pre>public&nbsp;boolean&nbsp;verifyElementPresent(java.lang.String&nbsp;elementLocator,
                           java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="verifyElementNotPresent(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyElementNotPresent</h4>
<pre>public&nbsp;boolean&nbsp;verifyElementNotPresent(java.lang.String&nbsp;elementLocator,
                              java.lang.String&nbsp;elementName)</pre>
</li>
</ul>
<a name="verifyImageLoaded(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyImageLoaded</h4>
<pre>public&nbsp;boolean&nbsp;verifyImageLoaded(java.lang.String&nbsp;imgLocator,
                        java.lang.String&nbsp;msg)</pre>
</li>
</ul>
<a name="assertEquals(java.lang.Object, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertEquals</h4>
<pre>public static&nbsp;void&nbsp;assertEquals(java.lang.Object&nbsp;s1,
                java.lang.Object&nbsp;s2)</pre>
<div class="block">Like JUnit's Assert.assertEquals, but knows how to compare string arrays</div>
</li>
</ul>
<a name="seleniumEquals(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seleniumEquals</h4>
<pre>public static&nbsp;boolean&nbsp;seleniumEquals(java.lang.String&nbsp;expectedPattern,
                     java.lang.String&nbsp;actual)</pre>
</li>
</ul>
<a name="seleniumEquals(java.lang.Object, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seleniumEquals</h4>
<pre>public static&nbsp;boolean&nbsp;seleniumEquals(java.lang.Object&nbsp;expected,
                     java.lang.Object&nbsp;actual)</pre>
<div class="block">Compares two objects, but handles "regexp:" strings like HTML Selenese</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>true if actual matches the expectedPattern, or false otherwise</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../com/infostretch/automation/ui/selenium/AssertionService.html#seleniumEquals(java.lang.String, java.lang.String)"><code>seleniumEquals(String, String)</code></a></dd></dl>
</li>
</ul>
<a name="assertEquals(java.lang.String[], java.lang.String[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertEquals</h4>
<pre>public static&nbsp;void&nbsp;assertEquals(java.lang.String[]&nbsp;s1,
                java.lang.String[]&nbsp;s2)</pre>
<div class="block">Asserts that two string arrays have identical string contents</div>
</li>
</ul>
<a name="verifyEquals(java.lang.String[], java.lang.String[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyEquals</h4>
<pre>public&nbsp;void&nbsp;verifyEquals(java.lang.String[]&nbsp;s1,
                java.lang.String[]&nbsp;s2)</pre>
<div class="block">Asserts that two string arrays have identical string contents (fails at
 the end of the test, during tearDown)</div>
</li>
</ul>
<a name="join(java.lang.String[], char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>join</h4>
<pre>public static&nbsp;java.lang.String&nbsp;join(java.lang.String[]&nbsp;sa,
                    char&nbsp;c)</pre>
</li>
</ul>
<a name="addVerificationError(java.lang.Throwable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addVerificationError</h4>
<pre>public&nbsp;void&nbsp;addVerificationError(java.lang.Throwable&nbsp;e)</pre>
</li>
</ul>
<a name="addAssertionLogWithScreenShot(java.lang.String, com.infostretch.automation.core.MessageTypes)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addAssertionLogWithScreenShot</h4>
<pre>public&nbsp;void&nbsp;addAssertionLogWithScreenShot(java.lang.String&nbsp;msg,
                                 <a href="../../../../../com/infostretch/automation/core/MessageTypes.html" title="enum in com.infostretch.automation.core">MessageTypes</a>&nbsp;type)</pre>
</li>
</ul>
<a name="addAssertionLog(java.lang.String, com.infostretch.automation.core.MessageTypes)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addAssertionLog</h4>
<pre>public&nbsp;void&nbsp;addAssertionLog(java.lang.String&nbsp;msg,
                   <a href="../../../../../com/infostretch/automation/core/MessageTypes.html" title="enum in com.infostretch.automation.core">MessageTypes</a>&nbsp;type)</pre>
</li>
</ul>
<a name="isCaptureScreenShotOnFailure()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isCaptureScreenShotOnFailure</h4>
<pre>protected&nbsp;boolean&nbsp;isCaptureScreenShotOnFailure()</pre>
</li>
</ul>
<a name="setCaptureScreenShotOnFailure(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCaptureScreenShotOnFailure</h4>
<pre>protected&nbsp;void&nbsp;setCaptureScreenShotOnFailure(boolean&nbsp;captureScreetShotOnFailure)</pre>
</li>
</ul>
<a name="isAlwaysCaptureScreenShot()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAlwaysCaptureScreenShot</h4>
<pre>protected&nbsp;boolean&nbsp;isAlwaysCaptureScreenShot()</pre>
</li>
</ul>
<a name="setAlwaysCaptureScreenShot(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAlwaysCaptureScreenShot</h4>
<pre>public&nbsp;void&nbsp;setAlwaysCaptureScreenShot(boolean&nbsp;alwaysCaptureScreenShot)</pre>
</li>
</ul>
<a name="getLastCapturedScreenShotFile()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastCapturedScreenShotFile</h4>
<pre>public&nbsp;java.lang.String&nbsp;getLastCapturedScreenShotFile()</pre>
</li>
</ul>
<a name="takeScreenShot()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>takeScreenShot</h4>
<pre>public&nbsp;java.lang.String&nbsp;takeScreenShot()</pre>
</li>
</ul>
<a name="getScreenShotDir()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getScreenShotDir</h4>
<pre>protected&nbsp;java.lang.String&nbsp;getScreenShotDir()</pre>
</li>
</ul>
<a name="getTestCaseName()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getTestCaseName</h4>
<pre>protected&nbsp;java.lang.String&nbsp;getTestCaseName()</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/AssertionService.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../../../com/infostretch/automation/ui/selenium/AutoWaitInjector.html" title="class in com.infostretch.automation.ui.selenium"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/infostretch/automation/ui/selenium/AssertionService.html" target="_top">Frames</a></li>
<li><a href="AssertionService.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small>
			<i>Copyright &#169; 2000 Infostretch Corp. All Rights Reserved.</i></small></p>
</body>
</html>
