<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_51) on Fri Jul 04 20:13:50 IST 2014 -->
<title>StringUtil (QMetry Automation Framework - 2.1.3)</title>
<meta name="date" content="2014-07-04">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="StringUtil (QMetry Automation Framework - 2.1.3)";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/StringUtil.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../com/infostretch/automation/util/StringMatcher.html" title="class in com.infostretch.automation.util"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../com/infostretch/automation/util/TextFilter.html" title="class in com.infostretch.automation.util"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?com/infostretch/automation/util/StringUtil.html" target="_top">Frames</a></li>
<li><a href="StringUtil.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.infostretch.automation.util</div>
<h2 title="Class StringUtil" class="title">Class StringUtil</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>org.apache.commons.lang.StringUtils</li>
<li>
<ul class="inheritance">
<li>com.infostretch.automation.util.StringUtil</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">StringUtil</span>
extends org.apache.commons.lang.StringUtils</pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static char</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#NULL">NULL</a></strong></code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_org.apache.commons.lang.StringUtils">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;org.apache.commons.lang.StringUtils</h3>
<code>EMPTY, INDEX_NOT_FOUND</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#StringUtil()">StringUtil</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#commaSeparate(java.util.Collection)">commaSeparate</a></strong>(java.util.Collection&lt;java.lang.String&gt;&nbsp;strings)</code>
<div class="block">Takes a list of Strings and combines them into a single comma-separated
 String.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#containsNumbers(java.lang.String)">containsNumbers</a></strong>(java.lang.String&nbsp;str)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#createRandomString()">createRandomString</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#createRandomString(java.lang.String)">createRandomString</a></strong>(java.lang.String&nbsp;prefix)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.Double[]</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#extractNums(java.lang.String)">extractNums</a></strong>(java.lang.String&nbsp;s)</code>
<div class="block">Extract all numbers from given string.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#extractParamValueFromUrl(java.lang.String, java.lang.String)">extractParamValueFromUrl</a></strong>(java.lang.String&nbsp;urlString,
                        java.lang.String&nbsp;paramName)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#getFormatedDate(java.lang.String, java.lang.String, java.lang.String)">getFormatedDate</a></strong>(java.lang.String&nbsp;dateString,
               java.lang.String&nbsp;formatFrom,
               java.lang.String&nbsp;formatTo)</code>
<div class="block">Convert date string from one format to another format.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#getRandomString(java.lang.String)">getRandomString</a></strong>(java.lang.String&nbsp;format)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#getTitleCase(java.lang.String)">getTitleCase</a></strong>(java.lang.String&nbsp;str)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#getWellFormedXPATH(java.lang.String)">getWellFormedXPATH</a></strong>(java.lang.String&nbsp;val)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#handleRegex(java.lang.String, java.lang.String, java.lang.String, int)">handleRegex</a></strong>(java.lang.String&nbsp;prefix,
           java.lang.String&nbsp;expectedPattern,
           java.lang.String&nbsp;actual,
           int&nbsp;flags)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#isNullOrEmpty(java.lang.String)">isNullOrEmpty</a></strong>(java.lang.String&nbsp;s)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#isXpath(java.lang.String)">isXpath</a></strong>(java.lang.String&nbsp;val)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#parseCSV(java.lang.String, char...)">parseCSV</a></strong>(java.lang.String&nbsp;data,
        char...&nbsp;ch)</code>
<div class="block">Method to parse character separated values, generic version of comma
 separated values Supports escape Character</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#seleniumEquals(java.lang.String, java.lang.String)">seleniumEquals</a></strong>(java.lang.String&nbsp;expectedPattern,
              java.lang.String&nbsp;actual)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.util.Map&lt;java.lang.String,java.lang.String&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#toMap(java.lang.String[], boolean)">toMap</a></strong>(java.lang.String[]&nbsp;csvKeyVal,
     boolean&nbsp;ensureKeyUppercase)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.util.Map&lt;java.lang.String,java.lang.String&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/util/StringUtil.html#toMap(java.lang.String, boolean, char...)">toMap</a></strong>(java.lang.String&nbsp;csvKeyVal,
     boolean&nbsp;ensureKeyUppercase,
     char...&nbsp;ch)</code>
<div class="block">get map form key value pair separated by char (default char is ",")</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_org.apache.commons.lang.StringUtils">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.apache.commons.lang.StringUtils</h3>
<code>abbreviate, abbreviate, abbreviateMiddle, capitalise, capitaliseAllWords, capitalize, center, center, center, chomp, chomp, chompLast, chompLast, chop, chopNewline, clean, concatenate, contains, contains, containsAny, containsAny, containsIgnoreCase, containsNone, containsNone, containsOnly, containsOnly, countMatches, defaultIfBlank, defaultIfEmpty, defaultString, defaultString, deleteSpaces, deleteWhitespace, difference, endsWith, endsWithAny, endsWithIgnoreCase, equals, equalsIgnoreCase, escape, getChomp, getCommonPrefix, getLevenshteinDistance, getNestedString, getNestedString, getPrechomp, indexOf, indexOf, indexOf, indexOf, indexOfAny, indexOfAny, indexOfAny, indexOfAnyBut, indexOfAnyBut, indexOfDifference, indexOfDifference, indexOfIgnoreCase, indexOfIgnoreCase, isAllLowerCase, isAllUpperCase, isAlpha, isAlphanumeric, isAlphanumericSpace, isAlphaSpace, isAsciiPrintable, isBlank, isEmpty, isNotBlank, isNotEmpty, isNumeric, isNumericSpace, isWhitespace, join, join, join, join, join, join, join, join, join, lastIndexOf, lastIndexOf, lastIndexOf, lastIndexOf, lastIndexOfAny, lastIndexOfIgnoreCase, lastIndexOfIgnoreCase, lastOrdinalIndexOf, left, leftPad, leftPad, leftPad, length, lowerCase, lowerCase, mid, normalizeSpace, ordinalIndexOf, overlay, overlayString, prechomp, remove, remove, removeEnd, removeEndIgnoreCase, removeStart, removeStartIgnoreCase, repeat, repeat, replace, replace, replaceChars, replaceChars, replaceEach, replaceEachRepeatedly, replaceOnce, reverse, reverseDelimited, reverseDelimitedString, right, rightPad, rightPad, rightPad, split, split, split, split, splitByCharacterType, splitByCharacterTypeCamelCase, splitByWholeSeparator, splitByWholeSeparator, splitByWholeSeparatorPreserveAllTokens, splitByWholeSeparatorPreserveAllTokens, splitPreserveAllTokens, splitPreserveAllTokens, splitPreserveAllTokens, splitPreserveAllTokens, startsWith, startsWithAny, startsWithIgnoreCase, strip, strip, stripAll, stripAll, stripEnd, stripStart, stripToEmpty, stripToNull, substring, substring, substringAfter, substringAfterLast, substringBefore, substringBeforeLast, substringBetween, substringBetween, substringsBetween, swapCase, trim, trimToEmpty, trimToNull, uncapitalise, uncapitalize, upperCase, upperCase</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="NULL">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>NULL</h4>
<pre>public static final&nbsp;char NULL</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../constant-values.html#com.infostretch.automation.util.StringUtil.NULL">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="StringUtil()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>StringUtil</h4>
<pre>public&nbsp;StringUtil()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getTitleCase(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTitleCase</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getTitleCase(java.lang.String&nbsp;str)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>str</code> - </dd>
<dt><span class="strong">Returns:</span></dt><dd>string with first char in upper-case</dd></dl>
</li>
</ul>
<a name="getRandomString(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRandomString</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getRandomString(java.lang.String&nbsp;format)</pre>
</li>
</ul>
<a name="containsNumbers(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>containsNumbers</h4>
<pre>public&nbsp;boolean&nbsp;containsNumbers(java.lang.String&nbsp;str)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>str</code> - : string to check</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if string contains any number, false otherwise</dd></dl>
</li>
</ul>
<a name="getFormatedDate(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFormatedDate</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getFormatedDate(java.lang.String&nbsp;dateString,
                               java.lang.String&nbsp;formatFrom,
                               java.lang.String&nbsp;formatTo)</pre>
<div class="block">Convert date string from one format to another format.
 <p>
 <b>Example:</b>
 <ul>
 <li> <code>
 formatDate("2012-01-11",
                                "yyy-MM-dd", "MMM d, yyyy"))
 </code> will retrun "Jan 11, 2012"</li>
 <li>formatDate("2012-01-11T05:38:00+0530", <code>#BPM_DATETIME_FORMAT</code>,
 <code>#GI_DATETIME_FORMAT</code>)) will retrun "Jan 11, 2012 05:38 AM"</li>
 </ul>
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dateStr</code> - : date string to be formated</dd><dd><code>formatFrom</code> - : format of the given date string</dd><dd><code>formatTo</code> - : String expected format</dd>
<dt><span class="strong">Returns:</span></dt><dd>date string in expected format</dd></dl>
</li>
</ul>
<a name="createRandomString(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createRandomString</h4>
<pre>public static&nbsp;java.lang.String&nbsp;createRandomString(java.lang.String&nbsp;prefix)</pre>
</li>
</ul>
<a name="createRandomString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createRandomString</h4>
<pre>public static&nbsp;java.lang.String&nbsp;createRandomString()</pre>
</li>
</ul>
<a name="isNullOrEmpty(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isNullOrEmpty</h4>
<pre>public static&nbsp;boolean&nbsp;isNullOrEmpty(java.lang.String&nbsp;s)</pre>
</li>
</ul>
<a name="isXpath(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isXpath</h4>
<pre>public static&nbsp;boolean&nbsp;isXpath(java.lang.String&nbsp;val)</pre>
</li>
</ul>
<a name="getWellFormedXPATH(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWellFormedXPATH</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getWellFormedXPATH(java.lang.String&nbsp;val)</pre>
</li>
</ul>
<a name="extractParamValueFromUrl(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractParamValueFromUrl</h4>
<pre>public static&nbsp;java.lang.String&nbsp;extractParamValueFromUrl(java.lang.String&nbsp;urlString,
                                        java.lang.String&nbsp;paramName)</pre>
</li>
</ul>
<a name="seleniumEquals(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seleniumEquals</h4>
<pre>public static&nbsp;boolean&nbsp;seleniumEquals(java.lang.String&nbsp;expectedPattern,
                     java.lang.String&nbsp;actual)</pre>
</li>
</ul>
<a name="handleRegex(java.lang.String, java.lang.String, java.lang.String, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>handleRegex</h4>
<pre>public static&nbsp;java.lang.Boolean&nbsp;handleRegex(java.lang.String&nbsp;prefix,
                            java.lang.String&nbsp;expectedPattern,
                            java.lang.String&nbsp;actual,
                            int&nbsp;flags)</pre>
</li>
</ul>
<a name="toMap(java.lang.String, boolean, char...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toMap</h4>
<pre>public static&nbsp;java.util.Map&lt;java.lang.String,java.lang.String&gt;&nbsp;toMap(java.lang.String&nbsp;csvKeyVal,
                                                     boolean&nbsp;ensureKeyUppercase,
                                                     char...&nbsp;ch)</pre>
<div class="block">get map form key value pair separated by char (default char is ",")</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>csvKeyVal</code> - or other char separated key=value pair. For example:
            "foo=bar,xxx=yyy"</dd><dd><code>ensureKeyUppercase</code> - : if true then it will set upper-case key for value</dd><dd><code>ch</code> - (optional) char used to separate key=value pair. default
            separator char is
            ","</dd>
<dt><span class="strong">Returns:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="toMap(java.lang.String[], boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toMap</h4>
<pre>public static&nbsp;java.util.Map&lt;java.lang.String,java.lang.String&gt;&nbsp;toMap(java.lang.String[]&nbsp;csvKeyVal,
                                                     boolean&nbsp;ensureKeyUppercase)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>csvKeyVal</code> - array of key=value pair.</dd><dd><code>ensureKeyUppercase</code> - : if true then it will set upper-case key for value</dd>
<dt><span class="strong">Returns:</span></dt><dd>map</dd></dl>
</li>
</ul>
<a name="parseCSV(java.lang.String, char...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parseCSV</h4>
<pre>public static&nbsp;java.lang.String[]&nbsp;parseCSV(java.lang.String&nbsp;data,
                          char...&nbsp;ch)</pre>
<div class="block">Method to parse character separated values, generic version of comma
 separated values Supports escape Character</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>data</code> - </dd><dd><code>char[]</code> - optional char args<br>
        char[0] : Separator - default value ','<br>
        char[1] : escape charter - default value '\'</dd>
<dt><span class="strong">Returns:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="extractNums(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractNums</h4>
<pre>public static&nbsp;java.lang.Double[]&nbsp;extractNums(java.lang.String&nbsp;s)</pre>
<div class="block">Extract all numbers from given string. For example:
 extractNums("test123456.0012300 another number -201") will return array
 of Double {123456.00123, -201.0}</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>s</code> - </dd>
<dt><span class="strong">Returns:</span></dt><dd>array of numbers</dd></dl>
</li>
</ul>
<a name="commaSeparate(java.util.Collection)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>commaSeparate</h4>
<pre>public static&nbsp;java.lang.String&nbsp;commaSeparate(java.util.Collection&lt;java.lang.String&gt;&nbsp;strings)</pre>
<div class="block">Takes a list of Strings and combines them into a single comma-separated
 String.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>strings</code> - The Strings to combine.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The combined, comma-separated, String.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/StringUtil.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../com/infostretch/automation/util/StringMatcher.html" title="class in com.infostretch.automation.util"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../com/infostretch/automation/util/TextFilter.html" title="class in com.infostretch.automation.util"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?com/infostretch/automation/util/StringUtil.html" target="_top">Frames</a></li>
<li><a href="StringUtil.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small>
			<i>Copyright &#169; 2000 Infostretch Corp. All Rights Reserved.</i></small></p>
</body>
</html>
