/**
 *  Below is listener example which is listen before, after and on failure of test-step.
 *  
 */

package com.listenersample;

import com.qmetry.qaf.automation.step.QAFTestStepListener;
import com.qmetry.qaf.automation.step.StepExecutionTracker;

public class TestStepTrackListener implements QAFTestStepListener {

	/**
	 * Below method will be called before test step execution.
	 * 
	 * It will print test step name and arguments.
	 * 
	 * @param stepExecutionTracker
	 */
	long start;
	@Override
	public void beforExecute(StepExecutionTracker stepExecutionTracker) {
		start = System.currentTimeMillis();
		 
	}

	/**
	 * Below method will be called after test step execution. Here you can
	 * exception print or clear.
	 * 
	 * It will print test step name and result of test step (success or fail).
	 * 
	 * @param stepExecutionTracker
	 */
	@Override
	public void afterExecute(StepExecutionTracker stepExecutionTracker) {
		 long elapsed = System.currentTimeMillis() - start;
		 

		 String desc =  stepExecutionTracker.getStep().getDescription() + "[" + elapsed +"ms]";
		 stepExecutionTracker.getStep().setDescription(desc);
	}

	@Override
	public void onFailure(StepExecutionTracker stepExecutionTracker) {
		System.out.println("Failure with step" + stepExecutionTracker.getStep().getDescription() + "is " +
				stepExecutionTracker.getException());
				
	}

}
