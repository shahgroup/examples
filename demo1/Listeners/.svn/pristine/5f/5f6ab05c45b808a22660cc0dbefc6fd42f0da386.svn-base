<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_51) on Fri Jul 04 20:13:46 IST 2014 -->
<title>CommonStep (QMetry Automation Framework - 2.1.3)</title>
<meta name="date" content="2014-07-04">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="CommonStep (QMetry Automation Framework - 2.1.3)";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/CommonStep.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../com/infostretch/automation/step/BaseTestStep.html" title="class in com.infostretch.automation.step"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../com/infostretch/automation/step/JavaStep.html" title="class in com.infostretch.automation.step"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?com/infostretch/automation/step/CommonStep.html" target="_top">Frames</a></li>
<li><a href="CommonStep.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.infostretch.automation.step</div>
<h2 title="Class CommonStep" class="title">Class CommonStep</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.infostretch.automation.step.CommonStep</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">CommonStep</span>
extends java.lang.Object</pre>
<div class="block">com.infostretch.automation.step.CommonStep.java</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>chirag</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#CommonStep()">CommonStep</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#addCookie(java.lang.String, java.lang.String)">addCookie</a></strong>(java.lang.String&nbsp;name,
         java.lang.String&nbsp;value)</code>
<div class="block">add cookie, This will valid for the entire domain</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertAttritube(java.lang.String, java.lang.String, java.lang.String)">assertAttritube</a></strong>(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;attr,
               java.lang.String&nbsp;value)</code>
<div class="block">Verify attribute value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertCssClass(java.lang.String, java.lang.String)">assertCssClass</a></strong>(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;className)</code>
<div class="block">verify css class name for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertCssStyle(java.lang.String, java.lang.String, java.lang.String)">assertCssStyle</a></strong>(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;prop,
              java.lang.String&nbsp;value)</code>
<div class="block">Verify css property value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertDisabled(java.lang.String)">assertDisabled</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is disable somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertEnabled(java.lang.String)">assertEnabled</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is enable somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertLinkWithPartialTextPresent(java.lang.String)">assertLinkWithPartialTextPresent</a></strong>(java.lang.String&nbsp;linkText)</code>
<div class="block">Verify that the specified partial link is somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertLinkWithTextPresent(java.lang.String)">assertLinkWithTextPresent</a></strong>(java.lang.String&nbsp;linkText)</code>
<div class="block">Verify that the specified link text is somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotAttritube(java.lang.String, java.lang.String, java.lang.String)">assertNotAttritube</a></strong>(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;attr,
                  java.lang.String&nbsp;value)</code>
<div class="block">Verify not attribute value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotCssClass(java.lang.String, java.lang.String)">assertNotCssClass</a></strong>(java.lang.String&nbsp;loc,
                 java.lang.String&nbsp;className)</code>
<div class="block">verify not css class name for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotCssStyle(java.lang.String, java.lang.String, java.lang.String)">assertNotCssStyle</a></strong>(java.lang.String&nbsp;loc,
                 java.lang.String&nbsp;prop,
                 java.lang.String&nbsp;value)</code>
<div class="block">Verify not css property value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotPresent(java.lang.String)">assertNotPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is not present somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotSelected(java.lang.String)">assertNotSelected</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is not selected somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotValue(java.lang.String, T)">assertNotValue</a></strong>(java.lang.String&nbsp;loc,
              T&nbsp;t)</code>
<div class="block">Not verify the (whitespace-trimmed) value of an input field (or anything
 else with a value parameter).</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertNotVisible(java.lang.String)">assertNotVisible</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is not visible somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertPresent(java.lang.String)">assertPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertSelected(java.lang.String)">assertSelected</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is selected somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertText(java.lang.String, java.lang.String)">assertText</a></strong>(java.lang.String&nbsp;loc,
          java.lang.String&nbsp;text)</code>
<div class="block">Verify the text of an element.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertValue(java.lang.String, java.lang.String)">assertValue</a></strong>(java.lang.String&nbsp;loc,
           java.lang.String&nbsp;value)</code>
<div class="block">Verify the (whitespace-trimmed) value of an input field (or anything else
 with a value parameter).</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assertVisible(java.lang.String)">assertVisible</a></strong>(java.lang.String&nbsp;loc)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#assetNotText(java.lang.String, java.lang.String)">assetNotText</a></strong>(java.lang.String&nbsp;loc,
            java.lang.String&nbsp;text)</code>
<div class="block">Verify an element is not contain the text.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#call_store(java.lang.String, java.lang.String, java.lang.Object...)">call_store</a></strong>(java.lang.String&nbsp;var,
          java.lang.String&nbsp;stepName,
          java.lang.Object...&nbsp;args)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#clear(java.lang.String)">clear</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">clear the specified element value from the field</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#click(java.lang.String)">click</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Clicks on a link, button, checkbox or radio button.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#comment(java.lang.Object)">comment</a></strong>(java.lang.Object&nbsp;args)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#deleteAllCookies()">deleteAllCookies</a></strong>()</code>
<div class="block">Delete all the cookies for the current domain.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#deleteCookie(java.lang.String)">deleteCookie</a></strong>(java.lang.String&nbsp;name)</code>
<div class="block">Delete the named cookie from the current domain.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#get(java.lang.String)">get</a></strong>(java.lang.String&nbsp;url)</code>
<div class="block">Opens an URL in the browser.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#getCookieValue(java.lang.String)">getCookieValue</a></strong>(java.lang.String&nbsp;name)</code>
<div class="block">Get a cookie with a given name</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#getText(java.lang.String)">getText</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Retrieve the value for specified element.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#givenNotPresent(java.lang.String)">givenNotPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the given element is not present somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#givenPresent(java.lang.String)">givenPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the given element is present somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#it_should_have_response(java.lang.String)">it_should_have_response</a></strong>(java.lang.String&nbsp;status)</code>
<div class="block">This method check for the response status of web service</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#mouseOver(java.lang.String)">mouseOver</a></strong>(java.lang.String&nbsp;loc)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#postContent(java.lang.String, java.lang.String)">postContent</a></strong>(java.lang.String&nbsp;content,
           java.lang.String&nbsp;resource)</code>
<div class="block">This method post the content through the web service.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#requestForResource(java.lang.String)">requestForResource</a></strong>(java.lang.String&nbsp;resource)</code>
<div class="block">This method request for resource to the web service.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#requestForResource(java.lang.String, java.util.Map)">requestForResource</a></strong>(java.lang.String&nbsp;resource,
                  java.util.Map&lt;java.lang.String,java.lang.String&gt;&nbsp;params)</code>
<div class="block">This method request for resource to the web service by passing the
 required parameters.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#response_should_have_xpath(java.lang.String)">response_should_have_xpath</a></strong>(java.lang.String&nbsp;xpath)</code>
<div class="block">This method check given Xpath is there in response status of web service</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#sendKeys(java.lang.String, java.lang.String)">sendKeys</a></strong>(java.lang.String&nbsp;text,
        java.lang.String&nbsp;loc)</code>
<div class="block">Insert text in the given locator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#setAttribute(java.lang.String, java.lang.String, java.lang.String)">setAttribute</a></strong>(java.lang.String&nbsp;loc,
            java.lang.String&nbsp;attr,
            java.lang.String&nbsp;value)</code>
<div class="block">set the attribute value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#setServiceEndPoint(java.lang.String)">setServiceEndPoint</a></strong>(java.lang.String&nbsp;arg1)</code>
<div class="block">sets the service end point URL</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#store(java.lang.Object, java.lang.String)">store</a></strong>(java.lang.Object&nbsp;val,
     java.lang.String&nbsp;var)</code>
<div class="block">Store a value in variable to use later on.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#storeLastStepResultInto(java.lang.String)">storeLastStepResultInto</a></strong>(java.lang.String&nbsp;var)</code>
<div class="block">Store last step result with the given name.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#submit(java.lang.String)">submit</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Submit the specified page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyAttritube(java.lang.String, java.lang.String, java.lang.String)">verifyAttritube</a></strong>(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;attr,
               java.lang.String&nbsp;value)</code>
<div class="block">Assert attribute value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyCssClass(java.lang.String, java.lang.String)">verifyCssClass</a></strong>(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;className)</code>
<div class="block">Assert css class name for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyCssStyle(java.lang.String, java.lang.String, java.lang.String)">verifyCssStyle</a></strong>(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;prop,
              java.lang.String&nbsp;value)</code>
<div class="block">Assert css property value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyDisabled(java.lang.String)">verifyDisabled</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Assert that the specified element is disabled somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyEnabled(java.lang.String)">verifyEnabled</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Assert that the specified element is not enable somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyLinkWithPartialTextPresent(java.lang.String)">verifyLinkWithPartialTextPresent</a></strong>(java.lang.String&nbsp;linkText)</code>
<div class="block">Asserts that the specified link with given partial text is somewhere on
 the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyLinkWithTextPresent(java.lang.String)">verifyLinkWithTextPresent</a></strong>(java.lang.String&nbsp;linkText)</code>
<div class="block">Asserts that the specified link with given text is somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotAttritube(java.lang.String, java.lang.String, java.lang.String)">verifyNotAttritube</a></strong>(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;attr,
                  java.lang.String&nbsp;value)</code>
<div class="block">Assert not attribute value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotCssClass(java.lang.String, java.lang.String)">verifyNotCssClass</a></strong>(java.lang.String&nbsp;loc,
                 java.lang.String&nbsp;className)</code>
<div class="block">Assert not css class name for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotCssStyle(java.lang.String, java.lang.String, java.lang.String)">verifyNotCssStyle</a></strong>(java.lang.String&nbsp;loc,
                 java.lang.String&nbsp;prop,
                 java.lang.String&nbsp;value)</code>
<div class="block">Assert not css property value for specific locator somewhere in the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotPresent(java.lang.String)">verifyNotPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Assert that the specified element is not somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotSelected(java.lang.String)">verifyNotSelected</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Assert that the specified element is not selected somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotText(java.lang.String, java.lang.String)">verifyNotText</a></strong>(java.lang.String&nbsp;loc,
             java.lang.String&nbsp;text)</code>
<div class="block">Asserts the text of an element.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotValue(java.lang.String, T)">verifyNotValue</a></strong>(java.lang.String&nbsp;loc,
              T&nbsp;t)</code>
<div class="block">Asserts not the value of an element.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyNotVisible(java.lang.String)">verifyNotVisible</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Assert that the specified element is not visible somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyPresent(java.lang.String)">verifyPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Asserts that the specified element is somewhere on the page.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifySelected(java.lang.String)">verifySelected</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Assert that the specified element is selected somewhere on the page</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyText(java.lang.String, java.lang.String)">verifyText</a></strong>(java.lang.String&nbsp;loc,
          java.lang.String&nbsp;text)</code>
<div class="block">Asserts the text of an element.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyValue(java.lang.String, T)">verifyValue</a></strong>(java.lang.String&nbsp;loc,
           T&nbsp;t)</code>
<div class="block">Asserts the value of an element.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#verifyVisible(java.lang.String)">verifyVisible</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Verify that the specified element is visible somewhere on the page</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForAttritube(java.lang.String, java.lang.String, java.lang.String)">waitForAttritube</a></strong>(java.lang.String&nbsp;loc,
                java.lang.String&nbsp;attr,
                java.lang.String&nbsp;value)</code>
<div class="block">This method wait until it gets the value of an element attribute for
 specified element locator.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForAttritube(java.lang.String, java.lang.String, java.lang.String, long)">waitForAttritube</a></strong>(java.lang.String&nbsp;loc,
                java.lang.String&nbsp;attr,
                java.lang.String&nbsp;value,
                long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForCssClass(java.lang.String, java.lang.String)">waitForCssClass</a></strong>(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;className)</code>
<div class="block">This method wait until it gets the CSS class name for specified element
 locator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForCssClass(java.lang.String, java.lang.String, long)">waitForCssClass</a></strong>(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;className,
               long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForCssStyle(java.lang.String, java.lang.String, java.lang.String)">waitForCssStyle</a></strong>(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;prop,
               java.lang.String&nbsp;value)</code>
<div class="block">This method wait until it gets the property value for specified element
 locator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForCssStyle(java.lang.String, java.lang.String, java.lang.String, long)">waitForCssStyle</a></strong>(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;prop,
               java.lang.String&nbsp;value,
               long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForDisabled(java.lang.String)">waitForDisabled</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Determines if the specified element is disable.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForDisabled(java.lang.String, long)">waitForDisabled</a></strong>(java.lang.String&nbsp;loc,
               long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForEnabled(java.lang.String)">waitForEnabled</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Determines if the specified element is enable.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForEnabled(java.lang.String, long)">waitForEnabled</a></strong>(java.lang.String&nbsp;loc,
              long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotAttritube(java.lang.String, java.lang.String, java.lang.String)">waitForNotAttritube</a></strong>(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;attr,
                   java.lang.String&nbsp;value)</code>
<div class="block">This method wait until it can not gets the value of an element attribute
 for specified element locator.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotAttritube(java.lang.String, java.lang.String, java.lang.String, long)">waitForNotAttritube</a></strong>(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;attr,
                   java.lang.String&nbsp;value,
                   long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotCssClass(java.lang.String, java.lang.String)">waitForNotCssClass</a></strong>(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;className)</code>
<div class="block">This method wait until it can not gets the CSS class name for specified
 element locator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotCssClass(java.lang.String, java.lang.String, long)">waitForNotCssClass</a></strong>(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;className,
                  long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotCssStyle(java.lang.String, java.lang.String, java.lang.String)">waitForNotCssStyle</a></strong>(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;prop,
                  java.lang.String&nbsp;value)</code>
<div class="block">This method wait until it can not gets the property value for specified
 element locator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotCssStyle(java.lang.String, java.lang.String, java.lang.String, long)">waitForNotCssStyle</a></strong>(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;prop,
                  java.lang.String&nbsp;value,
                  long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotPresent(java.lang.String)">waitForNotPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Determines if the specified element is not present.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotPresent(java.lang.String, long)">waitForNotPresent</a></strong>(java.lang.String&nbsp;loc,
                 long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotSelected(java.lang.String)">waitForNotSelected</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">This method wait until the locator in the specified page will not be
 selected.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotSelected(java.lang.String, long)">waitForNotSelected</a></strong>(java.lang.String&nbsp;loc,
                  long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotText(java.lang.String, java.lang.String)">waitForNotText</a></strong>(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;text)</code>
<div class="block">Gets the text of an element.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotText(java.lang.String, java.lang.String, long)">waitForNotText</a></strong>(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;text,
              long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotValue(java.lang.String, java.lang.Object)">waitForNotValue</a></strong>(java.lang.String&nbsp;loc,
               java.lang.Object&nbsp;value)</code>
<div class="block">Gets the (whitespace-trimmed) value of an input field (or anything else
 with a value parameter).</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotValue(java.lang.String, java.lang.Object, long)">waitForNotValue</a></strong>(java.lang.String&nbsp;loc,
               java.lang.Object&nbsp;value,
               long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotVisible(java.lang.String)">waitForNotVisible</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Determines if the specified element is not visible.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForNotVisible(java.lang.String, long)">waitForNotVisible</a></strong>(java.lang.String&nbsp;loc,
                 long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForPresent(java.lang.String)">waitForPresent</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Determines if the specified element is present.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForPresent(java.lang.String, long)">waitForPresent</a></strong>(java.lang.String&nbsp;loc,
              long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForSelected(java.lang.String)">waitForSelected</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">This method wait until the locator in the specified page will be
 selected.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForSelected(java.lang.String, long)">waitForSelected</a></strong>(java.lang.String&nbsp;loc,
               long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForText(java.lang.String, java.lang.String)">waitForText</a></strong>(java.lang.String&nbsp;loc,
           java.lang.String&nbsp;text)</code>
<div class="block">Gets the text of an element.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForText(java.lang.String, java.lang.String, long)">waitForText</a></strong>(java.lang.String&nbsp;loc,
           java.lang.String&nbsp;text,
           long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForValue(java.lang.String, java.lang.Object)">waitForValue</a></strong>(java.lang.String&nbsp;loc,
            java.lang.Object&nbsp;value)</code>
<div class="block">Gets the (whitespace-trimmed) value of an input field (or anything else
 with a value parameter).</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForValue(java.lang.String, java.lang.Object, long)">waitForValue</a></strong>(java.lang.String&nbsp;loc,
            java.lang.Object&nbsp;value,
            long&nbsp;sec)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForVisible(java.lang.String)">waitForVisible</a></strong>(java.lang.String&nbsp;loc)</code>
<div class="block">Wait for the specified element is visible
 
 Determines if the specified element is visible.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../../../com/infostretch/automation/step/CommonStep.html#waitForVisible(java.lang.String, long)">waitForVisible</a></strong>(java.lang.String&nbsp;loc,
              long&nbsp;sec)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="CommonStep()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>CommonStep</h4>
<pre>public&nbsp;CommonStep()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="comment(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>comment</h4>
<pre>public static&nbsp;void&nbsp;comment(java.lang.Object&nbsp;args)</pre>
</li>
</ul>
<a name="storeLastStepResultInto(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>storeLastStepResultInto</h4>
<pre>public static&nbsp;void&nbsp;storeLastStepResultInto(java.lang.String&nbsp;var)</pre>
<div class="block">Store last step result with the given name. In bdd if step returns value
 and you want to store the return value with name for further use you can
 call this step.
 <p>
 Example:<br/>
 <code>
 get text of 'my.ele.loc'<br/>
 AND store into 'myeletext'<br/>
 COMMENT: '${myeletext}'<br/>
 </code></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>var</code> - : {0} : the name of variable you in which want to store last
            step result</dd></dl>
</li>
</ul>
<a name="call_store(java.lang.String, java.lang.String, java.lang.Object...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>call_store</h4>
<pre>public static&nbsp;void&nbsp;call_store(java.lang.String&nbsp;var,
              java.lang.String&nbsp;stepName,
              java.lang.Object...&nbsp;args)</pre>
</li>
</ul>
<a name="store(java.lang.Object, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>store</h4>
<pre>public static&nbsp;void&nbsp;store(java.lang.Object&nbsp;val,
         java.lang.String&nbsp;var)</pre>
<div class="block">Store a value in variable to use later on. Stored The variable can be
 passed as argument to the other steps as ${varname}
 <p>
 Example:<br/>
 <code>
 store 5 into 'price'<br/>
 COMMENT: '${myeletext}'<br/>
 </code></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>val</code> - : {0} : value to be stored in variable</dd><dd><code>var</code> - : {1} : variable name</dd></dl>
</li>
</ul>
<a name="sendKeys(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendKeys</h4>
<pre>public static&nbsp;void&nbsp;sendKeys(java.lang.String&nbsp;text,
            java.lang.String&nbsp;loc)</pre>
<div class="block">Insert text in the given locator
 <p>
 Example:<br/>
 <code>
 sendKeys 'infostretch' into 'my.ele.loc'<br/>
 <br/>
 </code></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>text</code> - : {0} : String to be insert</dd><dd><code>loc</code> - : {1} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertPresent</h4>
<pre>public static&nbsp;void&nbsp;assertPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertLinkWithTextPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertLinkWithTextPresent</h4>
<pre>public static&nbsp;void&nbsp;assertLinkWithTextPresent(java.lang.String&nbsp;linkText)</pre>
<div class="block">Verify that the specified link text is somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert link with text 'infostretch' is present"<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>linkText</code> - : {0} : link text to be verified in browser page.</dd></dl>
</li>
</ul>
<a name="assertLinkWithPartialTextPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertLinkWithPartialTextPresent</h4>
<pre>public static&nbsp;void&nbsp;assertLinkWithPartialTextPresent(java.lang.String&nbsp;linkText)</pre>
<div class="block">Verify that the specified partial link is somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert link with partial text 'infostretch' is present"<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>linkText</code> - : {0} : partial link text to be verified in browser page.</dd></dl>
</li>
</ul>
<a name="verifyPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyPresent</h4>
<pre>public static&nbsp;void&nbsp;verifyPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Asserts that the specified element is somewhere on the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' is present<br/>
 KWD
 </code></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="verifyLinkWithTextPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyLinkWithTextPresent</h4>
<pre>public static&nbsp;void&nbsp;verifyLinkWithTextPresent(java.lang.String&nbsp;linkText)</pre>
<div class="block">Asserts that the specified link with given text is somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify link with text 'About Us' is present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>linkText</code> - : {0} : link text to be verified in browser page.</dd></dl>
</li>
</ul>
<a name="verifyLinkWithPartialTextPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyLinkWithPartialTextPresent</h4>
<pre>public static&nbsp;void&nbsp;verifyLinkWithPartialTextPresent(java.lang.String&nbsp;linkText)</pre>
<div class="block">Asserts that the specified link with given partial text is somewhere on
 the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify link with partial text 'infostretch' is present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>linkText</code> - : {0} : partial link text to be verified in browser page.</dd></dl>
</li>
</ul>
<a name="assertVisible(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertVisible</h4>
<pre>public static&nbsp;void&nbsp;assertVisible(java.lang.String&nbsp;loc)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="verifyVisible(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyVisible</h4>
<pre>public static&nbsp;void&nbsp;verifyVisible(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is visible somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' is visible<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="get(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>get</h4>
<pre>public static&nbsp;void&nbsp;get(java.lang.String&nbsp;url)</pre>
<div class="block">Opens an URL in the browser. This accepts both relative and absolute
 URLs. The "get" command waits for the page to load before proceeding,
 
 *
 <p>
 Example:<br/>
 <code>
 get 'http://www.infostretch.com'<br/>
 get '/'<br/>
 get '/Resources/case-studies.php'<br/>
 </code></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>url</code> - : {0} : the URL to open; may be relative or absolute</dd></dl>
</li>
</ul>
<a name="setServiceEndPoint(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setServiceEndPoint</h4>
<pre>public static&nbsp;void&nbsp;setServiceEndPoint(java.lang.String&nbsp;arg1)</pre>
<div class="block">sets the service end point URL
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 service endpoint is 'http://feeds.feedburner.com/InfostretchMobileAndQaBlog'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>arg1</code> - : {0} : The URL to be set as end point</dd></dl>
</li>
</ul>
<a name="requestForResource(java.lang.String, java.util.Map)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>requestForResource</h4>
<pre>public static&nbsp;void&nbsp;requestForResource(java.lang.String&nbsp;resource,
                      java.util.Map&lt;java.lang.String,java.lang.String&gt;&nbsp;params)</pre>
<div class="block">This method request for resource to the web service by passing the
 required parameters.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 user request for resource 'resource' with 'params'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>resource</code> - : {0} : resource String</dd><dd><code>params</code> - : {1} : parameters</dd></dl>
</li>
</ul>
<a name="requestForResource(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>requestForResource</h4>
<pre>public static&nbsp;void&nbsp;requestForResource(java.lang.String&nbsp;resource)</pre>
<div class="block">This method request for resource to the web service.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 user request for resource 'Resource String'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>resource</code> - : {0} : resource String</dd></dl>
</li>
</ul>
<a name="postContent(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>postContent</h4>
<pre>public static&nbsp;void&nbsp;postContent(java.lang.String&nbsp;content,
               java.lang.String&nbsp;resource)</pre>
<div class="block">This method post the content through the web service.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 user post 'postContent' for resource 'resource'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>content</code> - : {0} : content to be posted to service end point</dd><dd><code>resource</code> - : {1} : resource string</dd></dl>
</li>
</ul>
<a name="it_should_have_response(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>it_should_have_response</h4>
<pre>public static&nbsp;void&nbsp;it_should_have_response(java.lang.String&nbsp;status)</pre>
<div class="block">This method check for the response status of web service
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 response should have status 'ResponceStatus'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>status</code> - : {0} : Status message or response status String</dd></dl>
</li>
</ul>
<a name="response_should_have_xpath(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>response_should_have_xpath</h4>
<pre>public static&nbsp;void&nbsp;response_should_have_xpath(java.lang.String&nbsp;xpath)</pre>
<div class="block">This method check given Xpath is there in response status of web service
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 response should have xpath 'Xpath String'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>xpath</code> - : {0} : xpath string to be verified in respose</dd></dl>
</li>
</ul>
<a name="clear(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clear</h4>
<pre>public static&nbsp;void&nbsp;clear(java.lang.String&nbsp;loc)</pre>
<div class="block">clear the specified element value from the field
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 clear 'my.ele.loc'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="getText(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getText</h4>
<pre>public&nbsp;java.lang.String&nbsp;getText(java.lang.String&nbsp;loc)</pre>
<div class="block">Retrieve the value for specified element.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 get text of 'my.ele.loc'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd>The text contains by the specified locator</dd></dl>
</li>
</ul>
<a name="submit(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>submit</h4>
<pre>public static&nbsp;void&nbsp;submit(java.lang.String&nbsp;loc)</pre>
<div class="block">Submit the specified page. This is particularly useful for page without
 submit buttons, e.g. single-input "Search" page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 submit 'my.ele.loc'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="click(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>click</h4>
<pre>public static&nbsp;void&nbsp;click(java.lang.String&nbsp;loc)</pre>
<div class="block">Clicks on a link, button, checkbox or radio button. If the click action
 causes a new page to load (like a link usually does), call
 waitForPageToLoad.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 click on 'my.ele.loc'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForVisible(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForVisible</h4>
<pre>public static&nbsp;void&nbsp;waitForVisible(java.lang.String&nbsp;loc)</pre>
<div class="block">Wait for the specified element is visible
 
 Determines if the specified element is visible. An element can be
 rendered invisible by setting the CSS "visibility" property to "hidden",
 or the "display" property to "none", either for the element itself or one
 if its ancestors. This method will wait till its presence if the element
 is not present.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' to be visible<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForVisible(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForVisible</h4>
<pre>public static&nbsp;void&nbsp;waitForVisible(java.lang.String&nbsp;loc,
                  long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotVisible(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotVisible</h4>
<pre>public static&nbsp;void&nbsp;waitForNotVisible(java.lang.String&nbsp;loc)</pre>
<div class="block">Determines if the specified element is not visible. This method will wait
 till its invisibility, if the element is visible.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' not to be visible<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForNotVisible(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotVisible</h4>
<pre>public static&nbsp;void&nbsp;waitForNotVisible(java.lang.String&nbsp;loc,
                     long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForDisabled(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForDisabled</h4>
<pre>public static&nbsp;void&nbsp;waitForDisabled(java.lang.String&nbsp;loc)</pre>
<div class="block">Determines if the specified element is disable. This method will wait for
 the element to be disable, if the element is enable.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' to be disable<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForDisabled(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForDisabled</h4>
<pre>public static&nbsp;void&nbsp;waitForDisabled(java.lang.String&nbsp;loc,
                   long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForEnabled(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForEnabled</h4>
<pre>public static&nbsp;void&nbsp;waitForEnabled(java.lang.String&nbsp;loc)</pre>
<div class="block">Determines if the specified element is enable. This method will wait for
 the element to be enable, if the element is disable.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' to be enable<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForEnabled(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForEnabled</h4>
<pre>public static&nbsp;void&nbsp;waitForEnabled(java.lang.String&nbsp;loc,
                  long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForPresent</h4>
<pre>public static&nbsp;void&nbsp;waitForPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Determines if the specified element is present. This method will wait for
 the element to be present, if the element is not present.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' to be present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForPresent(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForPresent</h4>
<pre>public static&nbsp;void&nbsp;waitForPresent(java.lang.String&nbsp;loc,
                  long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotPresent</h4>
<pre>public static&nbsp;void&nbsp;waitForNotPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Determines if the specified element is not present. This method will wait
 for the element not to be present, if the element is present.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' is not present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForNotPresent(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotPresent</h4>
<pre>public static&nbsp;void&nbsp;waitForNotPresent(java.lang.String&nbsp;loc,
                     long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForText</h4>
<pre>public static&nbsp;void&nbsp;waitForText(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;text)</pre>
<div class="block">Gets the text of an element. This works for any element that contains
 text. This command uses either the textContent or the innerText of the
 element, which is the rendered text shown to the user.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' text 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The text of element locator</dd></dl>
</li>
</ul>
<a name="waitForText(java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForText</h4>
<pre>public static&nbsp;void&nbsp;waitForText(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;text,
               long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotText</h4>
<pre>public static&nbsp;void&nbsp;waitForNotText(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;text)</pre>
<div class="block">Gets the text of an element. This works for any element that contains
 text. This command uses either the textContent or the innerText of the
 element, which is the rendered text shown to the user.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' text is not 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The text of element locator</dd></dl>
</li>
</ul>
<a name="waitForNotText(java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotText</h4>
<pre>public static&nbsp;void&nbsp;waitForNotText(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;text,
                  long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForValue(java.lang.String, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForValue</h4>
<pre>public static&nbsp;void&nbsp;waitForValue(java.lang.String&nbsp;loc,
                java.lang.Object&nbsp;value)</pre>
<div class="block">Gets the (whitespace-trimmed) value of an input field (or anything else
 with a value parameter).
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' value is 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>value</code> - : {1} : The object of value for element locator</dd></dl>
</li>
</ul>
<a name="waitForValue(java.lang.String, java.lang.Object, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForValue</h4>
<pre>public static&nbsp;void&nbsp;waitForValue(java.lang.String&nbsp;loc,
                java.lang.Object&nbsp;value,
                long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotValue(java.lang.String, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotValue</h4>
<pre>public static&nbsp;void&nbsp;waitForNotValue(java.lang.String&nbsp;loc,
                   java.lang.Object&nbsp;value)</pre>
<div class="block">Gets the (whitespace-trimmed) value of an input field (or anything else
 with a value parameter).
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' value is not 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>value</code> - : {1} : The object of value for element locator</dd></dl>
</li>
</ul>
<a name="waitForNotValue(java.lang.String, java.lang.Object, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotValue</h4>
<pre>public static&nbsp;void&nbsp;waitForNotValue(java.lang.String&nbsp;loc,
                   java.lang.Object&nbsp;value,
                   long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForSelected(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForSelected</h4>
<pre>public static&nbsp;void&nbsp;waitForSelected(java.lang.String&nbsp;loc)</pre>
<div class="block">This method wait until the locator in the specified page will be
 selected.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' to be selected<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForSelected(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForSelected</h4>
<pre>public static&nbsp;void&nbsp;waitForSelected(java.lang.String&nbsp;loc,
                   long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotSelected(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotSelected</h4>
<pre>public static&nbsp;void&nbsp;waitForNotSelected(java.lang.String&nbsp;loc)</pre>
<div class="block">This method wait until the locator in the specified page will not be
 selected.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' is not selected<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="waitForNotSelected(java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotSelected</h4>
<pre>public static&nbsp;void&nbsp;waitForNotSelected(java.lang.String&nbsp;loc,
                      long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForAttritube(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForAttritube</h4>
<pre>public static&nbsp;void&nbsp;waitForAttritube(java.lang.String&nbsp;loc,
                    java.lang.String&nbsp;attr,
                    java.lang.String&nbsp;value)</pre>
<div class="block">This method wait until it gets the value of an element attribute for
 specified element locator.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' for attribute 'type' value is 'send'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value to be verified</dd><dd><code>value</code> - : {2} : value of attribute</dd></dl>
</li>
</ul>
<a name="waitForAttritube(java.lang.String, java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForAttritube</h4>
<pre>public static&nbsp;void&nbsp;waitForAttritube(java.lang.String&nbsp;loc,
                    java.lang.String&nbsp;attr,
                    java.lang.String&nbsp;value,
                    long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotAttritube(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotAttritube</h4>
<pre>public static&nbsp;void&nbsp;waitForNotAttritube(java.lang.String&nbsp;loc,
                       java.lang.String&nbsp;attr,
                       java.lang.String&nbsp;value)</pre>
<div class="block">This method wait until it can not gets the value of an element attribute
 for specified element locator.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' for attribute 'type' value is not 'send'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value to be verified</dd><dd><code>value</code> - : {2} : value of attribute</dd></dl>
</li>
</ul>
<a name="waitForNotAttritube(java.lang.String, java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotAttritube</h4>
<pre>public static&nbsp;void&nbsp;waitForNotAttritube(java.lang.String&nbsp;loc,
                       java.lang.String&nbsp;attr,
                       java.lang.String&nbsp;value,
                       long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForCssClass(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForCssClass</h4>
<pre>public static&nbsp;void&nbsp;waitForCssClass(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;className)</pre>
<div class="block">This method wait until it gets the CSS class name for specified element
 locator
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' css class name is 'ClassName'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>className</code> - : {1} : CSS class name to be verified</dd></dl>
</li>
</ul>
<a name="waitForCssClass(java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForCssClass</h4>
<pre>public static&nbsp;void&nbsp;waitForCssClass(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;className,
                   long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotCssClass(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotCssClass</h4>
<pre>public static&nbsp;void&nbsp;waitForNotCssClass(java.lang.String&nbsp;loc,
                      java.lang.String&nbsp;className)</pre>
<div class="block">This method wait until it can not gets the CSS class name for specified
 element locator
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' css class name is not 'ClassName'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>className</code> - : {1} : CSS class name to be verified</dd></dl>
</li>
</ul>
<a name="waitForNotCssClass(java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotCssClass</h4>
<pre>public static&nbsp;void&nbsp;waitForNotCssClass(java.lang.String&nbsp;loc,
                      java.lang.String&nbsp;className,
                      long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForCssStyle(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForCssStyle</h4>
<pre>public static&nbsp;void&nbsp;waitForCssStyle(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;prop,
                   java.lang.String&nbsp;value)</pre>
<div class="block">This method wait until it gets the property value for specified element
 locator
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' property 'propertyStyle' value is 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>prop</code> - : {1} : property (css style) to be verified</dd><dd><code>value</code> - : {2} : value of property (ie. css style property value)</dd></dl>
</li>
</ul>
<a name="waitForCssStyle(java.lang.String, java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForCssStyle</h4>
<pre>public static&nbsp;void&nbsp;waitForCssStyle(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;prop,
                   java.lang.String&nbsp;value,
                   long&nbsp;sec)</pre>
</li>
</ul>
<a name="waitForNotCssStyle(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotCssStyle</h4>
<pre>public static&nbsp;void&nbsp;waitForNotCssStyle(java.lang.String&nbsp;loc,
                      java.lang.String&nbsp;prop,
                      java.lang.String&nbsp;value)</pre>
<div class="block">This method wait until it can not gets the property value for specified
 element locator
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 wait until 'my.ele.loc' property 'propertyStyle' value is not 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>prop</code> - : {1} : property (css style) to be verified</dd><dd><code>value</code> - : {2} : value of property (ie. css style property value)</dd></dl>
</li>
</ul>
<a name="waitForNotCssStyle(java.lang.String, java.lang.String, java.lang.String, long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForNotCssStyle</h4>
<pre>public static&nbsp;void&nbsp;waitForNotCssStyle(java.lang.String&nbsp;loc,
                      java.lang.String&nbsp;prop,
                      java.lang.String&nbsp;value,
                      long&nbsp;sec)</pre>
</li>
</ul>
<a name="verifyNotPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotPresent</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Assert that the specified element is not somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' not present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator is present, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotVisible(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotVisible</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotVisible(java.lang.String&nbsp;loc)</pre>
<div class="block">Assert that the specified element is not visible somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' not visible<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : an element locator, can be direct locator value or a locator
            key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator is visible, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyEnabled(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyEnabled</h4>
<pre>public&nbsp;boolean&nbsp;verifyEnabled(java.lang.String&nbsp;loc)</pre>
<div class="block">Assert that the specified element is not enable somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' not enabled<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : an element locator, can be direct locator value or a locator
            key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator is enable, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyDisabled(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyDisabled</h4>
<pre>public&nbsp;boolean&nbsp;verifyDisabled(java.lang.String&nbsp;loc)</pre>
<div class="block">Assert that the specified element is disabled somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' disabled<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : an element locator, can be direct locator value or a locator
            key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator is disabled, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyText</h4>
<pre>public&nbsp;boolean&nbsp;verifyText(java.lang.String&nbsp;loc,
                 java.lang.String&nbsp;text)</pre>
<div class="block">Asserts the text of an element. This works for any element that contains
 text. This command uses either the textContent or the innerText of the
 element, which is the rendered text shown to the user.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' text is 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The text of element locator</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator text is verified, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotText</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotText(java.lang.String&nbsp;loc,
                    java.lang.String&nbsp;text)</pre>
<div class="block">Asserts the text of an element. This works for any element that contains
 text. This command uses either the textContent or the innerText of the
 element, which is the rendered text shown to the user.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' text is not 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The text of element locator</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator text is not verified,
         <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyValue(java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="verifyValue(java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyValue</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;boolean&nbsp;verifyValue(java.lang.String&nbsp;loc,
                      T&nbsp;t)</pre>
<div class="block">Asserts the value of an element.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' value is 'Type Value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The type value of element locator</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator type value is verified,
         <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotValue(java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="verifyNotValue(java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotValue</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;boolean&nbsp;verifyNotValue(java.lang.String&nbsp;loc,
                         T&nbsp;t)</pre>
<div class="block">Asserts not the value of an element.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' value is not 'Type Value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The type value of element locator</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator type value is not verified,
         <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifySelected(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifySelected</h4>
<pre>public&nbsp;boolean&nbsp;verifySelected(java.lang.String&nbsp;loc)</pre>
<div class="block">Assert that the specified element is selected somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' is selected<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator is selected, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotSelected(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotSelected</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotSelected(java.lang.String&nbsp;loc)</pre>
<div class="block">Assert that the specified element is not selected somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' is not selected<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator is not selected, <b>false</b>
         otherwise</dd></dl>
</li>
</ul>
<a name="verifyAttritube(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyAttritube</h4>
<pre>public&nbsp;boolean&nbsp;verifyAttritube(java.lang.String&nbsp;loc,
                      java.lang.String&nbsp;attr,
                      java.lang.String&nbsp;value)</pre>
<div class="block">Assert attribute value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' attribute 'type' value is 'send'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value to be verified</dd><dd><code>value</code> - : {2} : value of attribute</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator attribute value is verified,
         <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotAttritube(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotAttritube</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotAttritube(java.lang.String&nbsp;loc,
                         java.lang.String&nbsp;attr,
                         java.lang.String&nbsp;value)</pre>
<div class="block">Assert not attribute value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' attribute 'type' value is not 'send'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value to be verified</dd><dd><code>value</code> - : {2} : value of attribute</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator attribute value is not
         verified, <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyCssClass(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyCssClass</h4>
<pre>public&nbsp;boolean&nbsp;verifyCssClass(java.lang.String&nbsp;loc,
                     java.lang.String&nbsp;className)</pre>
<div class="block">Assert css class name for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' css class name is 'class name'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>className</code> - : {1} : css class name not to be verified</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator css class name is verified,
         <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotCssClass(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotCssClass</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotCssClass(java.lang.String&nbsp;loc,
                        java.lang.String&nbsp;className)</pre>
<div class="block">Assert not css class name for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' css class name is not 'class name'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>className</code> - : {1} : css class name not to be verified</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator css class name is not
         verified, <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyCssStyle(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyCssStyle</h4>
<pre>public&nbsp;boolean&nbsp;verifyCssStyle(java.lang.String&nbsp;loc,
                     java.lang.String&nbsp;prop,
                     java.lang.String&nbsp;value)</pre>
<div class="block">Assert css property value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' property 'Style' value is 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>prop</code> - : {1} : property (css style) to be verified</dd><dd><code>value</code> - : {2} : value of property (i.e css style property value)</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator property value is verified,
         <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="verifyNotCssStyle(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifyNotCssStyle</h4>
<pre>public&nbsp;boolean&nbsp;verifyNotCssStyle(java.lang.String&nbsp;loc,
                        java.lang.String&nbsp;prop,
                        java.lang.String&nbsp;value)</pre>
<div class="block">Assert not css property value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 verify 'my.ele.loc' property 'Style' value is not 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>prop</code> - : {1} : property (css style) to be verified</dd><dd><code>value</code> - : {2} : value of property (i.e css style property value)</dd>
<dt><span class="strong">Returns:</span></dt><dd><b>true</b> if the element locator property value is not
         verified, <b>false</b> otherwise</dd></dl>
</li>
</ul>
<a name="givenPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>givenPresent</h4>
<pre>public static&nbsp;void&nbsp;givenPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the given element is present somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 given 'my.ele.loc' is present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : an element locator, can be direct locator value or a locator
            key stored in locator repository</dd></dl>
</li>
</ul>
<a name="givenNotPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>givenNotPresent</h4>
<pre>public static&nbsp;void&nbsp;givenNotPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the given element is not present somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 given 'my.ele.loc' is not present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertNotPresent(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotPresent</h4>
<pre>public static&nbsp;void&nbsp;assertNotPresent(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is not present somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is not present<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertNotVisible(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotVisible</h4>
<pre>public static&nbsp;void&nbsp;assertNotVisible(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is not visible somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is not visible<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertEnabled(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertEnabled</h4>
<pre>public static&nbsp;void&nbsp;assertEnabled(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is enable somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is enable<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertDisabled(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertDisabled</h4>
<pre>public static&nbsp;void&nbsp;assertDisabled(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is disable somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is disable<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertText</h4>
<pre>public static&nbsp;void&nbsp;assertText(java.lang.String&nbsp;loc,
              java.lang.String&nbsp;text)</pre>
<div class="block">Verify the text of an element. This works for any element that contains
 text. This command uses either the textContent or the innerText of the
 element, which is the rendered text shown to the user.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' text is 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The text of element locator</dd></dl>
</li>
</ul>
<a name="assetNotText(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assetNotText</h4>
<pre>public static&nbsp;void&nbsp;assetNotText(java.lang.String&nbsp;loc,
                java.lang.String&nbsp;text)</pre>
<div class="block">Verify an element is not contain the text. This works for any element
 that contains text. This command uses either the textContent or the
 innerText of the element, which is the rendered text shown to the user.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' text is not 'infostretch'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>text</code> - : {1} : The text of element locator</dd></dl>
</li>
</ul>
<a name="assertValue(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertValue</h4>
<pre>public&nbsp;void&nbsp;assertValue(java.lang.String&nbsp;loc,
               java.lang.String&nbsp;value)</pre>
<div class="block">Verify the (whitespace-trimmed) value of an input field (or anything else
 with a value parameter).
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' value is 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>value</code> - : {1} : The value for element locator</dd></dl>
</li>
</ul>
<a name="assertNotValue(java.lang.String,java.lang.Object)">
<!--   -->
</a><a name="assertNotValue(java.lang.String, T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotValue</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;void&nbsp;assertNotValue(java.lang.String&nbsp;loc,
                      T&nbsp;t)</pre>
<div class="block">Not verify the (whitespace-trimmed) value of an input field (or anything
 else with a value parameter).
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' value is not 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>value</code> - : {1} : The object of value for element locator</dd></dl>
</li>
</ul>
<a name="assertSelected(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertSelected</h4>
<pre>public static&nbsp;void&nbsp;assertSelected(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is selected somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is selected<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertNotSelected(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotSelected</h4>
<pre>public static&nbsp;void&nbsp;assertNotSelected(java.lang.String&nbsp;loc)</pre>
<div class="block">Verify that the specified element is not selected somewhere on the page
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' is not selected<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd></dl>
</li>
</ul>
<a name="assertAttritube(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertAttritube</h4>
<pre>public static&nbsp;void&nbsp;assertAttritube(java.lang.String&nbsp;loc,
                   java.lang.String&nbsp;attr,
                   java.lang.String&nbsp;value)</pre>
<div class="block">Verify attribute value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' attribute 'type' value is 'send'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value to be asserted</dd><dd><code>value</code> - : {2} : value of attribute</dd></dl>
</li>
</ul>
<a name="assertNotAttritube(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotAttritube</h4>
<pre>public static&nbsp;void&nbsp;assertNotAttritube(java.lang.String&nbsp;loc,
                      java.lang.String&nbsp;attr,
                      java.lang.String&nbsp;value)</pre>
<div class="block">Verify not attribute value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' attribute 'type' value is not 'send'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value not to be asserted</dd><dd><code>value</code> - : {2} : value of attribute</dd></dl>
</li>
</ul>
<a name="assertCssClass(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertCssClass</h4>
<pre>public static&nbsp;void&nbsp;assertCssClass(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;className)</pre>
<div class="block">verify css class name for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' css class name is 'class name'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>className</code> - : {1} : css class name to be asserted</dd></dl>
</li>
</ul>
<a name="assertNotCssClass(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotCssClass</h4>
<pre>public static&nbsp;void&nbsp;assertNotCssClass(java.lang.String&nbsp;loc,
                     java.lang.String&nbsp;className)</pre>
<div class="block">verify not css class name for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' css class name is not 'class name'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>className</code> - : {1} : css class name not to be asserted</dd></dl>
</li>
</ul>
<a name="assertCssStyle(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertCssStyle</h4>
<pre>public static&nbsp;void&nbsp;assertCssStyle(java.lang.String&nbsp;loc,
                  java.lang.String&nbsp;prop,
                  java.lang.String&nbsp;value)</pre>
<div class="block">Verify css property value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' property 'Style' value is 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>prop</code> - : {1} : property (css style) to be asserted</dd><dd><code>value</code> - : {2} : value of property (i.e css style property value)</dd></dl>
</li>
</ul>
<a name="assertNotCssStyle(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assertNotCssStyle</h4>
<pre>public static&nbsp;void&nbsp;assertNotCssStyle(java.lang.String&nbsp;loc,
                     java.lang.String&nbsp;prop,
                     java.lang.String&nbsp;value)</pre>
<div class="block">Verify not css property value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' property 'Style' value is not 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>prop</code> - : {1} : property (css style) to be asserted</dd><dd><code>value</code> - : {2} : value of property (i.e css style property value)</dd></dl>
</li>
</ul>
<a name="setAttribute(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAttribute</h4>
<pre>public static&nbsp;void&nbsp;setAttribute(java.lang.String&nbsp;loc,
                java.lang.String&nbsp;attr,
                java.lang.String&nbsp;value)</pre>
<div class="block">set the attribute value for specific locator somewhere in the page.
 <p>
 Example:
 <p>
 BDD
 </p>
 <code>
 assert 'my.ele.loc' attribute 'type' value is 'value'<br/>
 </code>
 <p>
 KWD
 </p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>loc</code> - : {0} : an element locator, can be direct locator value or a
            locator key stored in locator repository</dd><dd><code>attr</code> - : {1} : attribute name which value not to be asserted</dd><dd><code>value</code> - : {2} : value of attribute</dd></dl>
</li>
</ul>
<a name="addCookie(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addCookie</h4>
<pre>public static&nbsp;void&nbsp;addCookie(java.lang.String&nbsp;name,
             java.lang.String&nbsp;value)</pre>
<div class="block">add cookie, This will valid for the entire domain</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - : {0} name of the cookie</dd><dd><code>value</code> - : {1} value of the cookie</dd></dl>
</li>
</ul>
<a name="deleteCookie(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deleteCookie</h4>
<pre>public static&nbsp;void&nbsp;deleteCookie(java.lang.String&nbsp;name)</pre>
<div class="block">Delete the named cookie from the current domain. This is equivalent to
 setting the named cookie's expiry date to some time in the past.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - : {0} name of the cookie to be deleted</dd></dl>
</li>
</ul>
<a name="deleteAllCookies()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deleteAllCookies</h4>
<pre>public static&nbsp;void&nbsp;deleteAllCookies()</pre>
<div class="block">Delete all the cookies for the current domain.</div>
</li>
</ul>
<a name="getCookieValue(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCookieValue</h4>
<pre>public static&nbsp;void&nbsp;getCookieValue(java.lang.String&nbsp;name)</pre>
<div class="block">Get a cookie with a given name</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - : {0} name of the cookie</dd></dl>
</li>
</ul>
<a name="mouseOver(java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>mouseOver</h4>
<pre>public static&nbsp;void&nbsp;mouseOver(java.lang.String&nbsp;loc)</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/CommonStep.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../com/infostretch/automation/step/BaseTestStep.html" title="class in com.infostretch.automation.step"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../com/infostretch/automation/step/JavaStep.html" title="class in com.infostretch.automation.step"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?com/infostretch/automation/step/CommonStep.html" target="_top">Frames</a></li>
<li><a href="CommonStep.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small>
			<i>Copyright &#169; 2000 Infostretch Corp. All Rights Reserved.</i></small></p>
</body>
</html>
